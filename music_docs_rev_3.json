{
  "info": {
    "title": "Sesac API - Music",
    "description": "API exposing resources for compositions, recordings, publishers, requests",
    "version": "0.0.1"
  },
  "swagger": "2.0",
  "produces": [
    "application/json"
  ],
  "host": "api.sesac.com",
  "tags": [
    {
      "name": "composition",
      "description": "Operations about compositions"
    },
    {
      "name": "recording",
      "description": "Operations about recordings"
    },
    {
      "name": "recordings",
      "description": "Operations about recordings"
    },
    {
      "name": "publisher",
      "description": "Operations about publishers"
    },
    {
      "name": "request",
      "description": "Operations about requests"
    },
    {
      "name": "requests",
      "description": "Operations about requests"
    }
  ],
  "paths": {
    "/V1/composition/{hfa_code}/recordings/possible": {
      "get": {
        "summary": "Composition - Recordings/Possible",
        "description": "Recordings that are possible matches for a composition by HFA code",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "hfa_code",
            "description": "Harry fox agency unique identification code for a song.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "play_count desc, title asc, artist asc",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Composition - Recordings/Possible"
          }
        },
        "tags": [
          "composition"
        ],
        "operationId": "getV1CompositionHfaCodeRecordingsPossible"
      }
    },
    "/V1/composition/{hfa_code}/recordings/possible/search": {
      "post": {
        "summary": "Composition - Recordings/Possible/Search",
        "description": "Possible recordings search by title, artist, album, label, isrc",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "hfa_code",
            "description": "Harry fox agency unique identification code for a song.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "terms",
            "description": "Allowed search terms. Ex. title, artist, album, label, isrc, upc.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "operator",
            "description": "Logical operator. Ex. OR, AND.",
            "type": "string",
            "default": "OR",
            "enum": [
              "OR",
              "AND"
            ],
            "required": false
          },
          {
            "in": "formData",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "formData",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "formData",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Composition - Recordings/Possible/Search"
          }
        },
        "tags": [
          "composition"
        ],
        "operationId": "postV1CompositionHfaCodeRecordingsPossibleSearch"
      }
    },
    "/V1/composition/{hfa_code}/recordings/possible/total": {
      "get": {
        "summary": "Composition - Recordings/Possible/Total",
        "description": "Total possible recordings for given composition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "hfa_code",
            "description": "Harry fox agency unique identification code for a song.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Composition - Recordings/Possible/Total"
          }
        },
        "tags": [
          "composition"
        ],
        "operationId": "getV1CompositionHfaCodeRecordingsPossibleTotal"
      }
    },
    "/V1/composition/{hfa_code}/recordings": {
      "get": {
        "summary": "Composition - HFA_Code/Recordings",
        "description": "Recordings by HFA code",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "hfa_code",
            "description": "Harry fox agency unique identification code for a song.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "play_count desc, title asc, artist asc",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Composition - HFA_Code/Recordings"
          }
        },
        "tags": [
          "composition"
        ],
        "operationId": "getV1CompositionHfaCodeRecordings"
      }
    },
    "/V1/composition/{hfa_code}/recordings/search": {
      "post": {
        "summary": "Composition - HFA_Code/Recordings/Search",
        "description": "Search recordings by title, artist, album, label, isrc or upc",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "hfa_code",
            "description": "Harry fox agency unique identification code for a song.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "terms",
            "description": "Allowed search terms. Ex. title, artist, album, label, isrc, upc.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "operator",
            "description": "Logical operator. Ex. OR, AND.",
            "type": "string",
            "default": "OR",
            "enum": [
              "OR",
              "AND"
            ],
            "required": false
          },
          {
            "in": "formData",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "formData",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "formData",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Composition - HFA_Code/Recordings/Search"
          }
        },
        "tags": [
          "composition"
        ],
        "operationId": "postV1CompositionHfaCodeRecordingsSearch"
      }
    },
    "/V1/composition/{hfa_code}": {
      "get": {
        "summary": "Composition - HFA_Code",
        "description": "Composition for a given HFA code",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "hfa_code",
            "description": "Harry fox agency unique identification code for a song.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Composition - HFA_Code"
          }
        },
        "tags": [
          "composition"
        ],
        "operationId": "getV1CompositionHfaCode"
      }
    },
    "/V1/recording/{isrc}": {
      "get": {
        "summary": "Recording - ISRC",
        "description": "Recording for a given ISRC",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "isrc",
            "description": "The international standard recording code of the recording.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Recording - ISRC"
          }
        },
        "tags": [
          "recording"
        ],
        "operationId": "getV1RecordingIsrc"
      }
    },
    "/V1/recording/{isrc}/usage": {
      "get": {
        "summary": "Recording - ISRC/Usage",
        "description": "Usage by UPC of a recording by ISRC",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "isrc",
            "description": "The international standard recording code of the recording.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "isrc",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Recording - ISRC/Usage"
          }
        },
        "tags": [
          "recording"
        ],
        "operationId": "getV1RecordingIsrcUsage"
      }
    },
    "/V1/recordings/possible/search": {
      "post": {
        "summary": "Recordings - Possible/Search",
        "description": "Search for possible recordings",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "terms",
            "description": "Allowed search terms. Ex. title, artist, album, label, isrc, upc.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "operator",
            "description": "Logical operator. Ex. OR, AND.",
            "type": "string",
            "default": "OR",
            "enum": [
              "OR",
              "AND"
            ],
            "required": false
          },
          {
            "in": "formData",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "formData",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "formData",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Recordings - Possible/Search"
          }
        },
        "tags": [
          "recordings"
        ],
        "operationId": "postV1RecordingsPossibleSearch"
      }
    },
    "/V1/publisher/{account_id}/composition/{hfa_code}/requests": {
      "get": {
        "summary": "Publisher - Composition/Requests",
        "description": "All requests for a given composition by HFA Code",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "account_id",
            "description": "Ex. TWU07L",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "play_count desc, track_title asc",
            "required": false
          },
          {
            "in": "path",
            "name": "hfa_code",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Publisher - Composition/Requests"
          }
        },
        "tags": [
          "publisher"
        ],
        "operationId": "getV1PublisherAccountIdCompositionHfaCodeRequests"
      }
    },
    "/V1/publisher/{account_id}/composition/{hfa_code}/requests/{request_status}": {
      "get": {
        "summary": "Publisher - Composition/Requests/Status",
        "description": "All requests by status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "request_status",
            "description": "1, 2, 3, pending, Pending, approved, Approved, declined, or Declined.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": true
          },
          {
            "in": "path",
            "name": "account_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "hfa_code",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Publisher - Composition/Requests/Status"
          }
        },
        "tags": [
          "publisher"
        ],
        "operationId": "getV1PublisherAccountIdCompositionHfaCodeRequestsRequestStatus"
      }
    },
    "/V1/publisher/{account_id}/compositions": {
      "get": {
        "summary": "Publisher - Compositions",
        "description": "Compositions user has access to by account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "possible_recording_count desc, hfa_code asc",
            "required": false
          },
          {
            "in": "path",
            "name": "account_id",
            "description": "Ex. EWH1XB",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Publisher - Compositions"
          }
        },
        "tags": [
          "publisher"
        ],
        "operationId": "getV1PublisherAccountIdCompositions"
      }
    },
    "/V1/publisher/{account_id}/compositions/search": {
      "post": {
        "summary": "Publisher - Compositions/Search",
        "description": "Compositions search by account",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "terms",
            "description": "Allowed search terms. Ex. title, writers, pub_name.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "operator",
            "description": "Logical operator. Ex. OR, AND.",
            "type": "string",
            "default": "OR",
            "enum": [
              "OR",
              "AND"
            ],
            "required": false
          },
          {
            "in": "formData",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "formData",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "formData",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "path",
            "name": "account_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Publisher - Compositions/Search"
          }
        },
        "tags": [
          "publisher"
        ],
        "operationId": "postV1PublisherAccountIdCompositionsSearch"
      }
    },
    "/V1/publisher/{account_id}/requests/my": {
      "get": {
        "summary": "Publisher - Requests/My",
        "description": "My compositions with request counts by type",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "path",
            "name": "account_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Publisher - Requests/My"
          }
        },
        "tags": [
          "publisher"
        ],
        "operationId": "getV1PublisherAccountIdRequestsMy"
      }
    },
    "/V1/publisher/{account_id}/requests/copub": {
      "get": {
        "summary": "Publisher - Requests/Copub",
        "description": "Co-publisher compositions with request counts by type",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "path",
            "name": "account_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Publisher - Requests/Copub"
          }
        },
        "tags": [
          "publisher"
        ],
        "operationId": "getV1PublisherAccountIdRequestsCopub"
      }
    },
    "/V1/publisher/{account_id}/requests/search": {
      "post": {
        "summary": "Publisher - Requests/Search",
        "description": "Request search by account",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "formData",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "formData",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "formData",
            "name": "token",
            "description": "The authentication token for a user.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "terms",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "operator",
            "description": "Logical operator. Ex. OR, AND.",
            "type": "string",
            "default": "OR",
            "enum": [
              "OR",
              "AND"
            ],
            "required": false
          },
          {
            "in": "path",
            "name": "account_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Publisher - Requests/Search"
          }
        },
        "tags": [
          "publisher"
        ],
        "operationId": "postV1PublisherAccountIdRequestsSearch"
      }
    },
    "/V1/request": {
      "post": {
        "summary": "Request - New",
        "description": "Create a new link request",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "hfa_code",
            "description": "Harry fox agency unique identification code for a song.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "account_id",
            "description": "Ex. FRGI1K",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "recording_id",
            "description": "Sound recording id to request link for.",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Request - New"
          }
        },
        "tags": [
          "request"
        ],
        "operationId": "postV1Request"
      }
    },
    "/V1/request/batch": {
      "post": {
        "summary": "Request - Batch",
        "description": "Request - Batch",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "account_id",
            "description": "Ex. Z4RT82",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "csv_file",
            "description": "CSV file",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Request - Batch"
          }
        },
        "tags": [
          "request"
        ],
        "operationId": "postV1RequestBatch"
      }
    },
    "/V1/requests": {
      "put": {
        "summary": "Requests",
        "description": "Update request[s]: accept or reject",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "request_ids[request_status]",
            "description": "1, 2, 3, pending, Pending, approved, Approved, declined, or Declined.",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "default": 1,
            "required": false
          },
          {
            "in": "formData",
            "name": "request_ids[request_id]",
            "description": "ID of request",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Requests"
          }
        },
        "tags": [
          "requests"
        ],
        "operationId": "putV1Requests"
      }
    },
    "/V1/requests/all": {
      "get": {
        "summary": "Requests - All",
        "description": "Return all requests for an admin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "updated_at desc",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Requests - All"
          }
        },
        "tags": [
          "requests"
        ],
        "operationId": "getV1RequestsAll"
      }
    },
    "/V1/requests/all/{request_status}": {
      "get": {
        "summary": "Requests - All/Status",
        "description": "Return all requests with specified status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "request_status",
            "description": "1, 2, 3, pending, Pending, approved, Approved, declined, or Declined.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": true
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "updated_at desc",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Requests - All/Status"
          }
        },
        "tags": [
          "requests"
        ],
        "operationId": "getV1RequestsAllRequestStatus"
      }
    },
    "/V1/requests/blocked": {
      "get": {
        "summary": "Requests - Blocked",
        "description": "Requests with blocked isrcs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "updated_at desc",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Requests - Blocked"
          }
        },
        "tags": [
          "requests"
        ],
        "operationId": "getV1RequestsBlocked"
      }
    },
    "/V1/requests/blocked/{request_status}": {
      "get": {
        "summary": "Requests - Blocked/Status",
        "description": "requests with blocked isrcs with specified status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "request_status",
            "description": "1, 2, 3, pending, Pending, approved, Approved, declined, or Declined.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": true
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "updated_at desc",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Requests - Blocked/Status"
          }
        },
        "tags": [
          "requests"
        ],
        "operationId": "getV1RequestsBlockedRequestStatus"
      }
    },
    "/V1/requests/publisher/{account_id}": {
      "get": {
        "summary": "Requests - Publisher",
        "description": "return all requests for an admin for an account_id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "description": "Ex. 5SYWCD",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "updated_at desc",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Requests - Publisher"
          }
        },
        "tags": [
          "requests"
        ],
        "operationId": "getV1RequestsPublisherAccountId"
      }
    },
    "/V1/requests/publisher/{account_id}/composition/{hfa_code}/recordings": {
      "get": {
        "summary": "sound recordings requested to be linked to a composition",
        "description": "sound recordings requested to be linked to a composition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "request_type",
            "description": "Link or Unlink.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "request_status",
            "description": "1, 2, 3, pending, Pending, approved, Approved, declined, or Declined.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "play_count desc",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "path",
            "name": "account_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "hfa_code",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "sound recordings requested to be linked to a composition"
          }
        },
        "tags": [
          "requests"
        ],
        "operationId": "getV1RequestsPublisherAccountIdCompositionHfaCodeRecordings"
      }
    },
    "/V1/requests/publisher/{account_id}/compositions": {
      "get": {
        "summary": "Requests - Publisher/Compositions",
        "description": "Compositions for a given publisher",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "request_type",
            "description": "Link or Unlink.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "request_status",
            "description": "1, 2, 3, pending, Pending, approved, Approved, declined, or Declined.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "song_title",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "path",
            "name": "account_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Requests - Publisher/Compositions"
          }
        },
        "tags": [
          "requests"
        ],
        "operationId": "getV1RequestsPublisherAccountIdCompositions"
      }
    },
    "/V1/requests/publisher/{account_id}/{request_status}": {
      "get": {
        "summary": "Requests - Publisher/Status",
        "description": "return request[s]: for an account_id according to the status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "description": "Ex. 5SYWCD",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "request_status",
            "description": "1, 2, 3, pending, Pending, approved, Approved, declined, or Declined.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": true
          },
          {
            "in": "query",
            "name": "order",
            "description": "Specify ordering for attributes.",
            "type": "string",
            "default": "updated_at desc",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page offset to fetch.",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of results to return per page.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pad a number of results.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Requests - Publisher/Status"
          }
        },
        "tags": [
          "requests"
        ],
        "operationId": "getV1RequestsPublisherAccountIdRequestStatus"
      }
    }
  }
}
